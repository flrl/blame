#!/usr/bin/env perl
# a wrapper for git-blame that distinctly colourises commit annotations

use warnings;
use strict;

sub ansic
{
    return "\033["
           . join(';', map { int $_ } @_)
           . 'm';
}

sub commit_colour
{
    my ($sha1) = @_;
    my $c0 = substr($sha1, 0, 1) eq '^' ? 1 : 0;

    no warnings 'portable'; # quiet 64 bit ints please
    return (38, 5, 17 + hex(substr($sha1, $c0, 16)) % 214);
}

open(my $blame, '-|', 'git', 'blame', @ARGV)
    or die "cannot exec git blame: $!";

my $pager = $ENV{GIT_PAGER} // $ENV{PAGER};
if (-t STDOUT and $pager) {
    $ENV{LESS} //= 'FRSX';

    open(my $out, '|-', $pager)
        or die "cannot exec $pager: $!";
    select $out;
}

while (<$blame>) {
    my ($sha1, $desc, $space, $lineno, $line) = split /\s\((.*?)(\s+)(\d+)\)/, $_, 2;

    print ansic(commit_colour($sha1)), "$sha1 $desc", ansic(0);
    print $space;
    print ansic(38,5,240), $lineno, ')', ansic(0);
    print $line;
}
